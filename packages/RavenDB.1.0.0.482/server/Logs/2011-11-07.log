time;logger;level;message;exception
2011-11-07 12:24:16.7864;Raven.Database.Impl.DocumentCacher;Info;"MemoryCache Settings:
  PhysicalMemoryLimit = 99
  CacheMemoryLimit    = 3192913920
  PollingInterval     = 00:02:00";
2011-11-07 12:24:16.9034;Raven.Storage.Esent.TransactionalStorage;Info;"Esent Settings:
  MaxVerPages      = 32768
  CacheSizeMax     = 262144
  DatabasePageSize = 4096";
2011-11-07 12:24:22.6907;Raven.Database.Storage.IndexDefinitionStorage;Info;"New index Raven%2fDocumentsByEntityName:
using Raven.Abstractions;
using Raven.Database.Linq;
using System.Linq;
using System.Collections.Generic;
using System.Collections;
using System;
using Raven.Database.Linq.PrivateExtensions;
using Lucene.Net.Documents;
using Raven.Database.Indexing;
public class Index_Raven_2fDocumentsByEntityName : AbstractViewGenerator
{
	public Index_Raven_2fDocumentsByEntityName()
	{
		this.ViewText = @""from doc in docs 
let Tag = doc[""""@metadata""""][""""Raven-Entity-Name""""]
where  Tag != null 
select new { Tag, LastModified = (DateTime)doc[""""@metadata""""][""""Last-Modified""""] };
"";
		this.ForEntityNames.Add(null);
		this.AddMapDefinition(docs => from doc in docs
			let Tag = doc[""@metadata""][""Raven-Entity-Name""]
			where Tag != null
			select new { Tag, LastModified = (DateTime)doc[""@metadata""][""Last-Modified""], __document_id = doc.__document_id });
		this.AddField(""LastModified"");
		this.AddField(""__document_id"");
		this.AddField(""Tag"");
		this.AddQueryParameterForMap(""__document_id"");
		this.AddQueryParameterForReduce(""__document_id"");
	}
}

Compiled to:
using Raven.Abstractions;
using Raven.Database.Linq;
using System.Linq;
using System.Collections.Generic;
using System.Collections;
using System;
using Raven.Database.Linq.PrivateExtensions;
using Lucene.Net.Documents;
using Raven.Database.Indexing;
public class Index_Raven_2fDocumentsByEntityName : AbstractViewGenerator
{
	public Index_Raven_2fDocumentsByEntityName()
	{
		this.ViewText = @""from doc in docs 
let Tag = doc[""""@metadata""""][""""Raven-Entity-Name""""]
where  Tag != null 
select new { Tag, LastModified = (DateTime)doc[""""@metadata""""][""""Last-Modified""""] };
"";
		this.ForEntityNames.Add(null);
		this.AddMapDefinition(docs => from doc in docs
			let Tag = doc[""@metadata""][""Raven-Entity-Name""]
			where Tag != null
			select new { Tag, LastModified = (DateTime)doc[""@metadata""][""Last-Modified""], __document_id = doc.__document_id });
		this.AddField(""LastModified"");
		this.AddField(""__document_id"");
		this.AddField(""Tag"");
		this.AddQueryParameterForMap(""__document_id"");
		this.AddQueryParameterForReduce(""__document_id"");
	}
}
";
2011-11-07 12:24:22.7727;Raven.Database.Indexing.IndexStorage;Debug;Loading saved index Raven/DocumentsByEntityName;
2011-11-07 12:24:23.0658;Raven.Database.Indexing.Index.Indexing;Debug;Creating index for Raven/DocumentsByEntityName;
2011-11-07 12:24:23.3298;Raven.Database.DocumentDatabase;Debug;Delete a document with key: Raven/Backup/Status and etag ;
2011-11-07 12:24:23.3688;Raven.Storage.Esent.StorageActions.DocumentStorageActions;Debug;Document with key 'Raven/Backup/Status' was not found, and considered deleted;
2011-11-07 12:25:32.5607;Raven.Storage.Esent.StorageActions.DocumentStorageActions;Debug;Document with key 'Raven/WarningMessages' was not found;
